name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'
      - name: Configure Maven settings.xml
        env:
          GITHUB_USERNAME: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.PKG_GITHUB_TOKEN }}
        run: |
          cat > ~/.m2/settings.xml <<EOF
          <settings xmlns="http://maven.apache.org/SETTINGS/1.0.0"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xsi:schemaLocation="http://maven.apache.org/SETTINGS/1.0.0
                    http://maven.apache.org/xsd/settings-1.0.0.xsd">
              <servers>
                  <server>
                      <id>github</id>
                      <username>${GITHUB_USERNAME}</username>
                      <password>${GITHUB_TOKEN}</password>
                  </server>
              </servers>
              <profiles>
                  <profile>
                      <id>github</id>
                      <repositories>
                          <repository>
                              <id>github</id>
                              <url>https://maven.pkg.github.com/lg-labs-pentagon/*</url>
                              <snapshots>
                                <enabled>true</enabled>
                              </snapshots>
                          </repository>
                      </repositories>
                  </profile>
              </profiles>
              <activeProfiles>
                  <activeProfile>github</activeProfile>
              </activeProfiles>
          </settings>
          EOF
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

  checkstyle:
    name: Checkstyle
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'
      - name: Restore Maven Cache
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Run Checkstyle
        run: make run-checkstyle
  verify:
    name: Verify
    runs-on: ubuntu-latest
    needs: setup
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'
      - name: Restore Maven Cache
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Install Graphviz
        run: sudo apt-get update && sudo apt-get install -y graphviz
      - name: Run verify using Makefile
        run: make run-verify
      - name: List files in target directory
        run: ls -al ./blank-support/target/site
      - name: Upload Test reports
        uses: actions/upload-artifact@v4
        with:
          name: test-reports
          path: ./blank-support/target/site/jacoco-aggregate-all
  quality:
    name: Quality
    runs-on: ubuntu-latest
    needs: [ checkstyle, verify ]
    steps:
      - name: Confirmation
        run: echo "Sent report to Sonar or Codacy... "
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [ quality ]
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'
      - name: Install Graphviz
        run: sudo apt-get update && sudo apt-get install -y graphviz
      - name: Restore Maven Cache
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and run tests using Makefile
        run: make install-skip-test

      - name: Show docker image
        run: docker image list | grep com.
      - name: Save Docker image
        run: docker save -o blank-service-image.tar com.blanksystem/blank-service:1.0.0-alpha
      - name: Upload Docker image as artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: blank-service-image.tar
      - name: Upload dependency-graph.png as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dependency-graph
          path: ./target/dependency-graph.png
      - name: Upload firebase.json as artifact
        uses: actions/upload-artifact@v4
        with:
          name: firebase-json
          path: ./firebase.json

  test:
    name: Acceptance Test
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: 'zulu'

      - name: Install Graphviz
        run: sudo apt-get update && sudo apt-get install -y graphviz

      - name: Download Docker image artifact
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: .

      - name: Load Docker image
        run: docker load -i blank-service-image.tar

      - name: Show docker image
        run: docker image list | grep com.

      - name: Restore Maven Cache
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Run acceptance tests using Makefile
        run: make run-atdd-module

      - name: List files in target directory
        run: ls -R ./blank-acceptance-test/target/

      - name: Upload Cucumber Report
        uses: actions/upload-artifact@v4
        with:
          name: cucumber-report
          path: ./blank-acceptance-test/target/atdd-reports/cucumber-reports.html

  openapi:
    name: OpenAPI
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Download docker compose
        run: sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      - name: Permisions to docker compose
        run: sudo chmod +x /usr/local/bin/docker-compose

      - name: Generate docs to OpenAPI as html
        run: make openapi-gen-html-up

      - name: List files in target directory
        run: ls -al ./blank-support/openapi

      - name: Upload OpenAPI artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi-doc
          path: ./blank-support/openapi
  asyncapi:
    name: AsyncAPI
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Download docker compose
        run: sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      - name: Permisions to docker compose
        run: sudo chmod +x /usr/local/bin/docker-compose

      - name: Generate docs to asyncapi as html
        run: make asyncapi-gen-html-up

      - name: Display structure of downloaded files
        run: ls -al ./blank-support/asyncapi

      - name: Upload AsyncAPI artifact
        uses: actions/upload-artifact@v4
        with:
          name: asyncapi-doc
          path: ./blank-support/asyncapi
  docs:
    name: Docs
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - run: ls -la .git
      - name: Download dependency-graph
        uses: actions/download-artifact@v4
        with:
          name: dependency-graph
          path: .
      - name: Update dependency-graph on MkDocs
        run: cp -r dependency-graph.png ./blank-support/app/docs/img

      - name: Display structure of downloaded files
        run: ls -R ./blank-support/app

      - name: Upload MkDocs artifact
        uses: actions/upload-artifact@v4
        with:
          name: mkdocs
          path: ./blank-support/app
      - name: Upload Git artifact
        uses: actions/upload-artifact@v4
        with:
          name: git
          path: .git/